완//f페이지 이동 -> 라우팅으로 구현
진행중//페이지 내부 컴포넌트 분리 및 컴포넌트 명 수정
API 써야함 진행중//로그인 페이지 및 로딩 시 메인페이지 구현
 네이버 / 카카오 api  이용할 수 있게 수정할 계획.

#오늘 할 일#

#1
Figma 수정 후 link 공유(금 오전까지)
메인/로딩/로그인(소셜 버튼 만들기_웹이니까 따로 컴포넌트 넣어주기)
<<참고할 사이트: instagram, pintrest, netflix, booking.com>>

   https://developers.naver.com/docs/login/devguide/devguide.md
- 영서님 스타일 참고-> 디렉토리 정리
   FE : 페이지 분리
   priv:추가 구현(movieApp- 대조군/ MVTI_FE-백업)

#2
전반적인 에러 수정하고, React로 
[클론코딩 마무리]
[TVFlix] 마무리
https://sisiblog.tistory.com/326  //참고


#3
S3에서 이미지 저장 및 호출
공부,,,, 이게뭐야
내가 뭘 해야합니까 제가

#4
경영시각화

#5
TestPage -  N S F T에 각각 3(또는 홀수)개씩의 질문 -> N/S F/T 전반적인 성향 파악 후 
해당 성향 + 선택한 영화의 Keyword/장르/출시연도 유사도가 높은 영화로 성향 출력!
(결과 페이지 꾸밀 수 있는만큼 진행 / 공유 가능할만큼 재미있거나 또는 예쁜 페이지 만들어야함)

프롬프트 엔지니어링 


#6
퍼블리싱 준비
네이버 SSO



이후 약 4일간 구현 계획
-MBTI : 키워드 수집(30개씩)
-screen별 디렉토리 정리
-로그인 API 사용가능하도록 페이지 수정(SSR할 예정. 고려하기)
-Figma 새로 작성>> 구현하면서 동시 수정
   우리데이터- posterURL로 수정하기
-포스터 들어갈 박스 만들어서 비워두기(컨테이너로)
-mobile(또는 일정 width이하) : 네비게이션 바 구현-> 스와이프
-돌아가기 버튼 라우터에 추가

-검사P 추가
   ui 필터(각 성향에 맞게) 구현
   화면 캡쳐https://goodsgoods.tistory.com/268
- 

---memo---------------------------------------------------------------------
작업폴더: model01_js,페이지3개 개설중.





- - - - -
프로젝트 구조 설계: 
기존 페이지의 내용을 React 컴포넌트로 분해하고, 필요한 경우 각 컴포넌트를 만듭니다. 
이때, 각 페이지를 React Router 등의 라우팅 라이브러리를 사용하여 라우팅할 수 있도록 합니다.

React 및 관련 라이브러리 설치: 
프로젝트에 React 및 관련 라이브러리를 설치합니다. 
보통 Create React App을 사용하여 새로운 React 프로젝트를 만드는 것이 가장 쉽습니다.

기존 코드 이식: 
기존 HTML, CSS 및 JavaScript 코드를 React 컴포넌트로 이식합니다. 
HTML을 JSX로 변환하고, CSS는 CSS 파일로 이동하고, JavaScript는 React 컴포넌트의 메서드로 변환합니다.

라우팅 설정: 
React Router 또는 다른 라우팅 라이브러리를 사용하여 페이지 간의 라우팅을 설정합니다. 
이를 통해 SPA의 각 페이지를 정의하고 사용자가 URL을 통해 해당 페이지로 이동할 수 있도록 합니다.

상태 관리 설정: 
Redux, MobX 또는 React의 내장 상태 관리 기능을 사용하여 애플리케이션의 상태를 관리합니다. 
이를 통해 데이터의 전역 상태를 효율적으로 관리하고 상태가 변경될 때 컴포넌트를 업데이트할 수 있습니다.

컴포넌트 분리 및 재사용: 
가능한 경우, 기존 페이지의 컴포넌트를 작은 단위로 분리하고 재사용 가능한 컴포넌트로 만듭니다.
 이렇게 하면 코드의 유지 관리가 쉬워지고, 애플리케이션의 성능도 향상됩니다.

테스트 및 디버깅: 
각 컴포넌트와 기능을 테스트하고 디버깅하여 애플리케이션이 예상대로 작동하는지 확인합니다.
 Jest, React Testing Library 등의 테스팅 도구를 사용하여 유닛 테스트 및 통합 테스트를 수행할 수 있습니다.

배포: 
애플리케이션을 테스트한 후에는 배포할 준비를 합니다. 필요한 경우 AWS, Firebase, Netlify 등의 
호스팅 서비스를 사용하여 애플리케이션을 배포합니다.